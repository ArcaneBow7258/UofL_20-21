===================Account Class File
package assignment3;

import java.text.NumberFormat;

public class Account {

	private final double RATE = 0.035; // interest rate of 3.5%

	private long acctNumber;
	private double balance;
	private String name;

	// -----------------------------------------------------------------
	// Sets up the account by defining its owner, account number, and initial
	// balance.
	// -----------------------------------------------------------------
	public Account(String owner, long account, double initial) {
		name = owner;
		acctNumber = account;
		balance = initial;
	}

	// -----------------------------------------------------------------
	// Deposits the specified amount into the account. Returns the new balance.
	// -----------------------------------------------------------------
	public double deposit(double amount) {
		if(amount < 0) {
			System.out.println("Please enter a positive number");
			return balance;
		}
		else {
			balance = balance + amount;
			return balance;
		}
	}

	// -----------------------------------------------------------------
	// Withdraws the specified amount from the account and applies the fee. Returns
	// the new balance.
	// -----------------------------------------------------------------
	public double withdraw(double amount, double fee) {
		if(amount + fee > balance) {
			System.out.println("The amount you wish to withdraw exceeds your balance (inclusive of fee)");
			return balance;
		}
		else {
			balance = balance - amount - fee;
			return balance;
		}
	}

	// -----------------------------------------------------------------
	// Adds interest to the account and returns the new balance.
	// -----------------------------------------------------------------
	public double addInterest() {
		balance += (balance * RATE);
		return balance;
	}

	// -----------------------------------------------------------------
	// Returns the current balance of the account.
	// -----------------------------------------------------------------
	public double getBalance() {
		return balance;
	}

	// -----------------------------------------------------------------
	// Returns a one-line description of the account as a string.
	// -----------------------------------------------------------------
	public String toString() {
		NumberFormat fmt = NumberFormat.getCurrencyInstance();
		return (acctNumber + "\t" + name + "\t" + fmt.format(balance));
	}

}
======================= Problem 1
package assignment3;


public class Problem1 {

	public static void main(String[] args) {
		Account acct1 = new Account("Ted Murphy", 72354, 102.56);
		Account acct2 = new Account("Jane Smith", 69713, 40.00);
		Account acct3 = new Account("Edward Demsey", 93757, 759.32);

		acct1.deposit(25.85);
		System.out.println("Murphy's balance after deposit: " + acct1.getBalance());

		double smithBalance = acct2.deposit(500.00);
		System.out.println("Smith balance after deposit: " + smithBalance);

		System.out.println("Smith balance after withdrawal: " + acct2.withdraw(430.75, 1.50));
		//NEW CODE TO CHECK FOR VALIDITY
		System.out.println("\nAttempting to perform illegal transactions");
		double murphyBalance = acct1.getBalance();
		System.out.println("Attempting to withdraw entire balance from Ted with 100 fee: ");
		acct1.withdraw(murphyBalance, 100);
		System.out.println("\nAttempting to deposit -10000 to Edward: ");
		acct3.deposit(-10000);
		acct1.addInterest();
		acct2.addInterest();
		acct3.addInterest();

		System.out.println();
		System.out.println(acct1);
		System.out.println(acct2);
		System.out.println(acct3);
	}
}
===================Problem 2
package assignment3;

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

public class Problem2 {
	public static void main(String[] args) throws IOException
	{
		Scanner file1Scan, file2Scan;
		String file1Line, file2Line;
		int count = 1;
		
		file1Scan = new Scanner(new File("C:\\Users\\Alvin Tran\\Desktop\\School\\Summer 2021\\CSE 220\\CSE_220_Assignments\\src\\assignment3\\txtFile1"));
		file2Scan = new Scanner(new File("C:\\Users\\Alvin Tran\\Desktop\\School\\Summer 2021\\CSE 220\\CSE_220_Assignments\\src\\assignment3\\txtFile2"));
		
		while(file1Scan.hasNext() || file2Scan.hasNext()) {
			file1Line = file1Scan.nextLine();
			file2Line = file2Scan.nextLine();
			if(file1Line.equals(file2Line)) {
				System.out.println("Line "+count+" is the same for both files.");
			}
			else {
				System.out.println("Line "+count+" is NOT for both files.");
				System.out.println("File 1: "+ file1Line);
				System.out.println("File 2: "+ file2Line);
			}
			System.out.println();
			count++;
		}
	}
}
============================Problem 3
package assignment3;

import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.scene.Group;
import javafx.event.ActionEvent;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.*;


public class Problem3 extends Application {
	
	Rectangle body;
	Circle greenLight, yellowLight, redLight;
	RadioButton goButton, cautionButton, stopButton;
	@Override
	public void start(Stage primaryStage) throws Exception {
		// TODO Auto-generated method stub
		//CREATING INTIAL TRAFFIC LIGHT DRAWING
		//INTIALLY AT DARKER VERSION
		body = new Rectangle(60, 0, 40, 60);
		body.setFill(Color.GREY);
		
		greenLight = new Circle(80, 15, 7.5);
		//Intially on
		greenLight.setFill(Color.color(102/255.0, 255/255.0, 0));

		
		yellowLight = new Circle(80, 30, 7.5);
		yellowLight.setFill(Color.color(139/255.0, 128/255.0, 0));
		
		redLight = new Circle(80, 45, 7.5);
		redLight.setFill(Color.color(139/255.0, 0 ,0));
		
		Group trafficLight = new Group(body, greenLight, yellowLight, redLight);
		//Buttons
		ToggleGroup buttons = new ToggleGroup();
		
		goButton = new RadioButton("Go!");
		goButton.setSelected(true);
		goButton.setToggleGroup(buttons);
		goButton.setOnAction(this::proccessRadioButtonAction);
		
		cautionButton = new RadioButton("Caution!");
		cautionButton.setToggleGroup(buttons);
		cautionButton.setOnAction(this::proccessRadioButtonAction);
		
		stopButton = new RadioButton("Stop!");
		stopButton.setToggleGroup(buttons);
		stopButton.setOnAction(this::proccessRadioButtonAction);
		
		//Creating Option boxes
		VBox options = new VBox(goButton, cautionButton, stopButton);
		options.setAlignment(Pos.CENTER_LEFT);
		options.setSpacing(10);
		
		//Creating the scene
		//Horizontal box
		HBox setting = new HBox();
		setting.getChildren().addAll(options, trafficLight);
		setting.setSpacing(10);
		setting.setAlignment(Pos.CENTER);
		setting.setStyle("-fx-background-color: lightblue");
		
		//Scene
		Scene scene = new Scene(setting, 500, 150);
		
		//Stage setting
		primaryStage.setTitle("Traffic Light Controller");
		primaryStage.setScene(scene);
		primaryStage.show();
		
	}
	//Button to update color
	public void proccessRadioButtonAction(ActionEvent event) {
		//Set all to dark mode
		greenLight.setFill(Color.color(0, 100/255.0, 0));
		yellowLight.setFill(Color.color(139/255.0, 128/255.0, 0));
		redLight.setFill(Color.color(139/255.0, 0 ,0));
		
		//Set correct to bright
		if(goButton.isSelected())
			greenLight.setFill(Color.color(102/255.0, 255/255.0, 0));
		else if(cautionButton.isSelected())
			yellowLight.setFill(Color.color(255/255.0, 255/255.0, 0));
		else
			redLight.setFill(Color.color(255/255.0, 0, 0));
	}
	
	
	
	
	public static void main(String[] args) {
		launch(args);
	}
}
========================= Problem 4
package assignment3;

import java.util.Scanner;

public class Problem4 {

	public static void main(String[] args) {
		//Vars
		char letter;
		int aCount = 0, eCount = 0, iCount = 0, oCount = 0, uCount = 0, cCount = 0;
		//Scanning
		Scanner scan = new Scanner(System.in);
		System.out.println("Enter a phrase");
		String phrase = scan.nextLine();
		
	
		
		
		for(int i = 0; i < phrase.length(); i++) {
			letter = phrase.charAt(i);

			//VOWEL TESTING
			if(letter == 'a') 
				aCount++;
			else if(letter =='e')
				eCount++;
			else if(letter =='i')
				iCount++;
			else if(letter =='o')
				oCount++;
			else if(letter =='u')
				uCount++;
			else if(letter != 'A' && letter !='E' && letter != 'I' && letter != 'O' && letter != 'U')
				cCount++;
			//Counts only lowercase vowels, and then makes sure character is not a vowel itself before adding to the count
			//Essentially, Uppercase vowels are not accounted for.
		}
		System.out.println("Number of lowecase a's: "+ aCount);
		System.out.println("Number of lowecase e's: "+ eCount);
		System.out.println("Number of lowecase i's: "+ iCount);
		System.out.println("Number of lowecase o's: "+ oCount);
		System.out.println("Number of lowecase u's: "+ uCount);
		System.out.println("Nubmer of non-vowels characters (includes spaces & special characters: " + cCount );
		
		
		
		scan.close();
	}
}
================Problem 5
package assignment3;

import javafx.application.Application;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.paint.Color;
import javafx.scene.shape.Line;
import javafx.stage.Stage;

public class Problem5 extends Application {

	@Override
	public void start(Stage primaryStage) throws Exception {
		// TODO Auto-generated method stub
		Group root = new Group();
		Line parallel = null;
		int yPos = 10;
		int ySep = 10;
		//Width dictates how long our lines can be and height adjusted to fit all 20
		int width = 200;
		int height = ySep*21 + yPos;
		
		for(int count = 0; count < 20; count++) {
			parallel = new Line();
			parallel.setStrokeWidth(2);
			parallel.setStartX(0);
			parallel.setEndX(width*Math.random()); //Makes a line between 0-width size
			
			//Y start and end are same to keep horizontal
			parallel.setStartY(yPos);
			parallel.setEndY(yPos);
			yPos += ySep;
			
			root.getChildren().add(parallel);
		}
		
		//Staging
		Scene scene = new Scene(root, width, height, Color.CORAL);
		primaryStage.setTitle("Lines");
		primaryStage.setScene(scene);
		primaryStage.show();
		
	}
	public static void main(String[] args) {
		launch(args);
	}
}
