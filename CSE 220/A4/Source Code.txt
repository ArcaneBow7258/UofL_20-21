package assignment4;

public class Student {
	
	private String	firstName, lastName;
	private double testScore;
	
	public Student(String first, String last, double testScore)
	{
		firstName = first;
		lastName = last;
		this.testScore = testScore;
	}

	/**
	 * @return the test scores
	 */
	public double getTestScore()
	{
		return testScore;
	}

	public void setTestScore(Double testScore)
	{
		this.testScore = testScore;
	}

	
	
	public String getFirstName()
	{
		return firstName;
	}

	public String getLastName()
	{
		return lastName;
	}


	
}






package assignment4;
import java.util.ArrayList;

public class Course {
	private ArrayList<Student> enrolled = new ArrayList<Student>();
	private String name;
	public Course(String name) {
		this.name = name;
	}
	public void addStudent(Student student) {
		enrolled.add(student);
	}
	
	public double average() {
		double sum = 0;
		for(Student student : enrolled) {
			sum += student.getTestScore();
					
		}
		return (sum/enrolled.size());
	}
	
	public void roll() {
		System.out.println("Students in " +name);
		System.out.println("\t\t First name\t Last Name");
		for(int i = 0; i < enrolled.size(); i++) {
			
			System.out.println("Student " + (i+1) + ": \t" + enrolled.get(i).getFirstName() + "\t\t " + enrolled.get(i).getLastName());
					
		}
	}
}







package assignment4;

public class Problem1 {
	public static void main(String[] args) {
		Student ralph = new Student("Ralph", "Smith", 90.0);
		Student amy = new Student("Amy", "Johnson", 100.0);
		Student jerry = new Student("Jerry", "Kim", 80.0);
	
		Course history = new Course("History");
		history.addStudent(ralph);
		history.addStudent(amy);
		history.addStudent(jerry);
		
		
		history.roll();
		System.out.println("Test average: " +history.average());
		
	
	}
}









package assignment4;

public interface Priority {
	public void setPriority(int prio);
	public int getPriority();

}







package assignment4;

public class Task implements Priority {
	int priority;
	String name;
	int time;

	public Task(String name, int priority, int time) {
		this.name = name;
		this.priority = priority;
		this.time = time;
	}
	@Override
	public void setPriority(int prio) {
		// TODO Auto-generated method stub
		priority = prio;
	}

	@Override
	public int getPriority() {
		// TODO Auto-generated method stub
		return priority;
	}

	public void comparePriority(Task task) {
		// TODO Auto-generated method stub
		if(priority < task.getPriority()) {
			System.out.println("Task " + this.name + " has a greater priority than " + task.name + " at " + this.getPriority());
		}
		else {
			System.out.println("Task " + task.name + " has a greater priority with " + this.name + " at " + task.getPriority());
		}

	}
	
	public void setTime(int time) {
		this.time = time;
	}
	
	public int getTime() {
		return time;
	}
}










package assignment4;

public class Problem2 {
	public static void main(String[] args) {
		Task homework = new Task("Homework", 1, 2);
		Task call = new Task("Call Fred", 2, 6);
		Task practice = new Task("Practice", 3, 4);
		
		System.out.println("As of now:");
		call.comparePriority(practice);
		System.out.println("Changing Calling Fred to less urgent (priority 3)");
		call.setPriority(3);
		System.out.println("New priority of calling Fred: " + call.getPriority());
		System.out.println();
		
		System.out.println("Moving practice up in priority to 2 from " + practice.getPriority());
		practice.setPriority(2);
		System.out.println("Practice priority is now " +practice.getPriority());
		System.out.println("New priority:");
		call.comparePriority(practice);
		System.out.println();
		
		System.out.println("And homework compared to everything else:");
		homework.comparePriority(practice);
		homework.comparePriority(call);
	}
}













package assignment4;
import java.util.Scanner;
public class Problem3 {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int[] counter = new int[51];
		int input;
		
		System.out.println("Enter an integer from 0-50, exit by entering out of range integer: ");
		input = scan.nextInt();
		while(0 <= input && input <= 50) {
			counter[input] += 1;
			
			System.out.println("Enter another integer: ");
			input = scan.nextInt();
		}
		
		for (int i = 0; i < counter.length; i++) {
			if(counter[i] > 0) {
				System.out.println("Count of " + i + "'s: " + counter[i]);
			}
		}
		scan.close();
		
	}
}











package assignment4;

import javafx.scene.Group;
import javafx.scene.paint.Color;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.Polyline;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.Line;
public class Car extends Group {
	
	public Car() {
		Rectangle street = new Rectangle(0, 65, 250, 250);
		street.setFill(Color.GREY);
		
		double bodyPoints[] = {40, 50, 50, 50, 60, 40, 80, 40, 90, 50, 100, 50, 100, 60, 40, 60, 40, 50};
		
		Polygon body = new Polygon(bodyPoints);
		body.setFill(Color.RED);
		Polyline outline = new Polyline(bodyPoints);
		outline.setStrokeWidth(2);;
		
		Circle wheel1 = new Circle(50, 60, 5);
		Circle wheel2 = new Circle(90, 60, 5);
		
	
		
		getChildren().addAll(street, body, outline, wheel1, wheel2);
	}
}















package assignment4;

import javafx.application.Application;
import javafx.scene.paint.Color;
import javafx.scene.Scene;
import javafx.stage.Stage;

public class Problem4 extends Application {

	@Override
	public void start(Stage primaryStage) throws Exception {
		// TODO Auto-generated method stub
		Car car = new Car();
		Scene scene = new Scene(car, 200, 200, Color.SKYBLUE);
		
		primaryStage.setTitle("Car");
		primaryStage.setScene(scene);
		primaryStage.show();
		
	}
	public static void main(String[] args) {
		launch(args);
	}

}










